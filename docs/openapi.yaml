openapi: 3.0.3
servers:
  - url: http://localhost:8082
  - url: http://localhost:8083
info:
  title: person API
  description: |-
    This is a super simple API for managing persons
  contact:
    email: devs@agile-learning.institute
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
paths:
  /api/person/:
    post:
      summary: Add a new person
      operationId: addperson
      requestBody:
        description: Prodcut Name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/people'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/people'          
        '405':
          description: Invalid input
    get:
      summary: Get a list of people names and ids
      operationId: getNames
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/names'          
        '404':
          description: not found
        '405':
          description: Validation exception
  /api/person/{id}:
    patch:
      summary: Update an existing person
      description: Update an existing person by Id
      operationId: updatePerson
      parameters:
        - name: id
          in: path
          description: ID of person to update
          required: true
          schema:
            type: string
            format: GUID
      requestBody:
        description: Updated field
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/people'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/people'          
        '404':
          description: person not found
        '405':
          description: Validation exception
    get:
      summary: Get an existing person
      description: Get an existing person by Id
      operationId: gettPerson
      parameters:
        - name: id
          in: path
          description: ID of person to return
          required: true
          schema:
            type: string
            format: GUID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/people'          
        '404':
          description: person not found
        '405':
          description: Validation exception
  /api/config/:
    get:
      summary: Get API Configuration Information
      operationId: getConfig
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/people'          
  /api/health/:
    get:
      summary: Promethius Healthcheck endpoint
      operationId: getHealth
      responses:
        '200':
          description: Successful operation

components:
  schemas:
    names:
      type: array
      items:
        type: object
        properties: 
          ID:
            description: MongoDB _id
            type: string
            format: uuid
          name:
            description: Name
            type: string      
    config:
      type: object
      properties:
        apiVersion:
          type: string
          description: Symantic Version Number
        configItems:
          type: array
          items:
            type: object
            properties: 
              name:
                description: Conf Item Name (Env Var Name, File Name)
                type: string
              value:
                description: The value for that config item
                type: string
              from:
                description: Where the value was found
                type: string
                enum:
                  - default
                  - environment
                  - file
        versions: 
          type: array
          items:
            type: object
            properties:
              _id: 
                description: Collection Version Document ID
                type: string
              collectionName: 
                description: Mongodb Collection name
                type: string
              currentVersion:
                description: Schema Version for the collection
                type: string
        enumerators: 
          type: object
          properties: 
            name:
              description: Enumerator Name
              type: string
            status:
              description: Enumerator Status 
              type: string
              enum: 
                - Active
                - Depricated
            version:
              description: Enumerator Version
              type: string
            enumerators: 
              description: List of Enumerator Value:Description pairs
              type: object
        mentors:
          description: List of all members with role Mentor
          type: array
          items:
            type: object
            properties: 
              ID:
                description: MongoDB _id
                type: string
              name:
                description: Name
                type: string      
        partners:
          description: List of all partners
          type: array
          items:
            type: object
            properties: 
              ID:
                description: MongoDB _id
                type: string
              name:
                description: Name
                type: string      
    people:
      required:
        - _id
        - userName
      properties:
        _id:
          description: The unique identifier for a person
          type: string
        userName:
          description: Username
          pattern: ^[^\s]{0,32}$
          type: string
        firstName:
          description: The persons first name
          pattern: ^[^\s]{0,32}$
          type: string
        lastName:
          description: The persons last name
          pattern: ^[^\s]{0,32}$
          type: string
        description:
          description: Notes or other descriptive text
          pattern: ^[ -~]{0,256}$
          type: string
        status:
          description: The status of this member
          enum:
            - Pending
            - Onboarding
            - Matching
            - Active
            - Hold
            - Inactive
            - TimedOut
            - Archived
          type: string
        roles:
          description: RBAC Roles for this person
          items:
            enum:
              - Member
              - Mentor
              - Partner
              - Donor
              - Staff
            type: string
          type: array
        mentorId:
          description: the _id of this persons Mentor if they have one
          type: string
        partnerId:
          description: the _id of this persons partner (contacts and members)
          type: string
        title:
          description: The person's title in the career path
          enum:
            - Candidate
            - Apprentice
            - Resident
            - Master
            - Distinguished
            - N/A
          type: string
        cadence:
          description: This person's preferred meeting cadence
          enum:
            - As Needed
            - Monthly
            - Every 2 Weeks
            - Weekly
            - Twice a Week
            - Daily
          type: string
        eMail:
          description: The person's eMail address
          pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
          type: string
        gitHub:
          description: The person's gitHub User ID
          pattern: ^[^\s]{0,32}$
          type: string
        phone:
          description: The person's phone number
          pattern: ^\+?1?\s?(\([0-9]{3}\)|[0-9]{3})[-.\s]?[0-9]{3}[-.\s]?[0-9]{4}$
          type: string
        device:
          description: The type of PC this person is using
          enum:
            - Mac (Intel)
            - Mac (Apple)
            - Linux
            - Windows
          type: string
        location:
          description: The location where this person lives
          pattern: ^[ -~]{0,256}$
          type: string
        lastSaved:
          description: Change Tracking breadcrumb
          properties:
            fromIp:
              description: Http Request remote IP address
              pattern: >-
                ^(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}$
              type: string
            byUser:
              description: UUID Of User
              type: string
            atTime:
              description: The date-time when last updated
              type: string
            correlationId:
              description: The logging correlation ID of the update transaction
              type: string
          additionalProperties: false
          type: object
      additionalProperties: false
      type: object
