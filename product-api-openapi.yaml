openapi: 3.0.3
info:
  title: person API
  description: |-
    This is a super simple API for managing persons
  contact:
    email: devs@agile-learning.institute
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
paths:
  /api/person/{id}:
    patch:
      summary: Update an existing person
      description: Update an existing person by Id
      operationId: updatePerson
      parameters:
        - name: id
          in: path
          description: ID of person to update
          required: true
          schema:
            type: string
            format: GUID
      requestBody:
        description: Updated field
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'          
        '404':
          description: person not found
        '405':
          description: Validation exception
    get:
      summary: Get an existing person
      description: Get an existing person by Id
      operationId: gettPerson
      parameters:
        - name: id
          in: path
          description: ID of person to return
          required: true
          schema:
            type: string
            format: GUID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/person'          
        '404':
          description: person not found
        '405':
          description: Validation exception
  /api/person/:
    post:
      description: Add a new person
      operationId: addperson
      requestBody:
        description: Prodcut Name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/person'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/person'          
        '405':
          description: Invalid input
  /api/config/:
    get:
      description: Get API Configuration Information
      operationId: getConfig
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'          

components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: string
          format: GUID
          example: de8b31e7-00af-4872-9116-8b950b30b778
        name:
          type: string
          example: Foo
        description:
          type: string
          example: Longer foo string
    Config:
      type: object
      properties:
        apiVersion:
          type: string
        dataVersion:
          type: string
